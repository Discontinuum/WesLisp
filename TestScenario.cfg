#textdomain wesnoth-loti
[scenario]
    id="weslisp_test_scenario"
    name= _ "WesLisp Test Scenario"
    map_data="{~add-ons/WesLisp/test.map}"
    victory_when_enemies_defeated=no
    turns=-1
    {SCENARIO_MUSIC "traveling_minstrels.ogg"}
    {EXTRA_SCENARIO_MUSIC "silvan_sanctuary.ogg"}
    {EXTRA_SCENARIO_MUSIC "journeys_end.ogg"}
    experience_modifier="100"

    {INDOORS}
	[lua]
            code = << wesnoth.require('~add-ons/WesLisp/lua/main.lua') >>
        [/lua]
    [side]
        type=Fencer
        id=King
        name= _ "Master of Parentheses"
        side=1
        canrecruit=yes
        controller=human
        recruit=
        team_name=Loyalists
        user_team_name=_"Loyalists"
        gold=0
        income=-2
        [modifications]
            {TRAIT_INTELLIGENT}
            {TRAIT_INTELLIGENT}
        [/modifications]
    [/side]
    [side]
    	side=2
    	income=-2
    	gold=0
    	team_name=Loyalists
        user_team_name=_"Loyalists"
        controller=ai
        [unit]
        	x,y = 1,6
        	type=Royal Guard
        	ai_special=guardian
        	[modifications]
            		{TRAIT_LOYAL}
        	[/modifications]
        [/unit]
        [unit]
        	x,y = 2,6
        	type=Royal Guard
        	ai_special=guardian
        	[modifications]
            		{TRAIT_LOYAL}
        	[/modifications]
        [/unit]
    [/side]
	[event]
		name=prestart
		[set_menu_item]
			id=lisp_repl
			description=_"Enter Lisp command"
			
			[command]
				[message]
					speaker=narrator
					caption="Lisp REPL"
					message="$lisp_repl_history|"
					[text_input]
						label="> "
						text="$lisp_repl|"
						variable="lisp_repl"
					[/text_input]
				[/message]
				[lua]
					code = <<
						if wml.variables["lisp_repl"] and wml.variables["lisp_repl"] ~= "" then
							if not wml.variables["lisp_repl_history"] then
								wml.variables["lisp_repl_history"] = "> "..wml.variables["lisp_repl"]
							else
								wml.variables["lisp_repl_history"] = wml.variables["lisp_repl_history"] .. "\n> "..wml.variables["lisp_repl"]
							end
							sexpr, err = read_string(wml.variables["lisp_repl"])
							if err then
								wml.variables["lisp_repl_history"] = wml.variables["lisp_repl_history"] .. "\n" .. err
								wesnoth.wml_actions.message{speaker="narrator", caption = "Error when reading", message=wml.variables["lisp_repl_history"]}
							else
								res, err = eval(sexpr)
								if err then
									wml.variables["lisp_repl_history"] = wml.variables["lisp_repl_history"] .. "\n" .. err
									wesnoth.wml_actions.message{speaker="narrator", caption = "Error when evaluating", message=wml.variables["lisp_repl_history"]}
								else
									wml.variables["lisp_repl_history"] = wml.variables["lisp_repl_history"] .. "\n" .. print_sexpr(res)
									wesnoth.wml_actions.message{speaker="narrator", caption = "Evaluation result", message=wml.variables["lisp_repl_history"]}
								end
							end
						end
					>>
				[/lua]
				#{CLEAR_VARIABLE lisp_repl}
			[/command]
		[/set_menu_item]
		[set_menu_item]
			id=clear_repl_history
			description=_"Clear REPL history"
			
			[command]
				{CLEAR_VARIABLE lisp_repl_history}
			[/command]
		[/set_menu_item]
	[/event]
[/scenario]
